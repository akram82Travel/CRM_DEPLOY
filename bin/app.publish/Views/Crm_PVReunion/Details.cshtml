@model CRMSTUBSOFT.Crm_PVReunion

@{
    ViewBag.Title = "Consulter";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="content-wrapper">
    <div class="content-header row">
        <div class="content-header-left col-md-6 col-12 mb-2 breadcrumb-new">
            <h3 class="content-header-title mb-0 d-inline-block">Consulter  des PV Réunions</h3>
            <div class="row breadcrumbs-top d-inline-block">
                <div class="breadcrumb-wrapper col-12">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item">
                            <a href="/">Tableau de Bord</a>
                        </li>
                        <li class="breadcrumb-item">
                            <a href="/Crm_PVReunion">PV Réunions</a>
                        </li>
                        <li class="breadcrumb-item active">
                            Liste des PV Réunions
                        </li>
                    </ol>
                </div>
            </div>
        </div>
    </div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="form-group">
            <div class="offset-md-8 col-md-3">
                <input type="submit" name="Enregistrer" id="Enregistrer" value="Enregistrer" class="btn btn-success" style="display: none" />
                @*<input type="checkbox" id="checkbox" name="checkbox" class="switchery" data-color="info" data-switchery="true" onchange="Activer();" />*@
            </div>
        </div>
        <div class="row">
            <div class="card offset-md-3 col-xl-6 col-lg-6 col-md-12">
                <div class="card-content">
                    <div class="card-body ">
                        <div class="form-horizontal">
                            <h4>Information Genérale</h4>
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="row">
                                <div class="form-group  col-xl-4 col-lg-4 col-md-1">
                                    <label>Numéro PVRéunion</label>

                                    @Html.EditorFor(model => model.NumeroPVReunion, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.NumeroPVReunion, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group col-xl-4 col-lg-4 col-md-12">
                                    <label>Date Réunion</label>

                                    @Html.EditorFor(model => model.DateReunion, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.DateReunion, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group col-xl-4 col-lg-4 col-md-12">
                                    <label> Date Prévus Réunion</label>

                                    @Html.EditorFor(model => model.DatePrevusReunion, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.DatePrevusReunion, "", new { @class = "text-danger" })

                                </div>
                            </div>

                            <div class="row">
                                <div class="form-group col-xl-6 col-lg-6 col-md-12">
                                    <label>Projet</label>

                                    @Html.EditorFor(model => model.Projet, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Projet, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group col-xl-6 col-lg-6 col-md-12">
                                    <label>Module</label>

                                    @Html.EditorFor(model => model.Module, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Module, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-xl-6 col-lg-6 col-md-12">
                                    <label>Client</label>

                                    @Html.DropDownListFor(model => model.CodeClient, (IEnumerable
             <SelectListItem>)ViewData["ListClient"], "Sélectionner un client", new { @class = "selectize-control input-selectize multi", @id = "CodeClient", @onchange = "FixeClient()",@disabled="disabled" })

                                </div>

                                <div class="form-group col-xl-6 col-lg-6 col-md-12">
                                    <div class="card">
                                        <strong>Personnes présent:</strong>
                                        @foreach (var item in ViewData["listpersonne"] as List<string>)
                                        {
                                            <p>@item</p>

                                        }
                                    </div>
                                   
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-xl-6 col-lg-6 col-md-12">
                                    @Html.LabelFor(model => model.Objet, htmlAttributes: new { @class = "control-label" })

                                    @Html.EditorFor(model => model.Objet, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Objet, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group col-xl-6 col-lg-6 col-md-12">
                                    <label>Durée</label>

                                    @Html.EditorFor(model => model.Dure, new { htmlAttributes = new { @class = "form-control", @type = "time", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Dure, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="form-group col-xl-12 col-lg-12 col-md-12">
                                <label>Description</label>

                                @Html.TextAreaFor(model => model.DescriptionGeneral, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DescriptionGeneral, "", new { @class = "text-danger" })

                            </div>
                            <div class="form-group hidden">
                                @Html.LabelFor(model => model.Createur, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Createur, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Createur, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>

    $('.delete').on('click', function(){
    $(this).parent("#box").remove();
});
    </script>
    <script>
        function Activer()
      {
         if ($("#checkbox").is(':checked')) {
         $('#DateReunion').attr('readonly', false);
         $('#DatePrevusReunion').attr('readonly', false);
        $('#Projet').attr('readonly', false);
        $('#Module').attr('readonly', false);
        $('#Objet').attr('readonly', false);
        $('#Dure').attr('readonly', false);
        $('#Enregistrer').show();
        }
      }
    </script>
}
<script>

   function GetDynamicTextBox(value) {
            var div = $("<div />");

            var textBox = $("<input />").attr("type", "textbox").attr("name", "DynamicTextBox").attr("class", "btn border-info");
            textBox.val(value);
            div.append(textBox);

            var button = $("<button></button>").attr("value", "Supprimer").attr("class", "btn btn-danger delete  la la-trash-o");
            button.attr("onclick", "RemoveTextBox(this)");
            div.append(button);

            return div;
        }
       function AddTextBox() {
            var div = GetDynamicTextBox("");
            $("#TextBoxContainer").append(div);
        }
            function RemoveTextBox(button) {
            $(button).parent().remove();
        }

</script>
