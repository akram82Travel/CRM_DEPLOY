@model CRMSTUBSOFT.Crm_ReclamationClient

@{
    ViewBag.Title = "Consulter Reclamation";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="content-wrapper">
    <div class="content-header row">
        <div class="content-header-left col-md-6 col-12 mb-2 breadcrumb-new">
            <h3 class="content-header-title mb-0 d-inline-block">Consulter une Réclamation</h3>
            <div class="row breadcrumbs-top d-inline-block">
                <div class="breadcrumb-wrapper col-12">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item">
                            <a href="/">Table de board</a>
                        </li>
                        <li class="breadcrumb-item">
                            <a href="/Crm_ReclamationClient">Réclamations</a>
                        </li>
                        <li class="breadcrumb-item active">
                            Consulter
                        </li>
                    </ol>
                </div>
            </div>
        </div>

    </div>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="col-lg-12 col-md-12">
                <div class="card">
                    <div class="card-header">
                        <h4 class="card-title">Information Genérale</h4>
                        <div class="heading-elements">
                            <input type="submit" name="Enregistrer" id="Enregistrer" value="Enregistrer" class="btn btn-success" style="display: none" />
                            @*<input type="checkbox" id="checkbox" name="checkbox" class="switchery" data-color="info" data-switchery="true" onchange="Activer();" />*@

                        </div>

                        <hr />
                    </div>
                    <div class="card-body row">

                        <div class="col-md-3">
                            <div class="form-group row no-gutters">
                                <label for="NumeroReclamation" class="col-sm-4 col-form-label"> N°Réclamation</label>
                                <div class="col-sm-8">
                                    @Html.EditorFor(model => model.Id_Reclamation, new { htmlAttributes = new { @class = "form-control", @value = @ViewData["Compteur"], @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Id_Reclamation, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group row no-gutters">
                                <label for="DateCreation" class="col-sm-4 col-form-label">Date Création</label>
                                <div class="col-sm-8">
                                    @Html.EditorFor(model => model.DateReclamation, new { htmlAttributes = new { @class = "form-control", @type = "datetime-local", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.DateReclamation, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group row no-gutters">
                                <label for="Type" class="col-sm-4 col-form-label"> Type</label>
                                <div class="col-sm-6">
                                    @Html.DropDownListFor(model => model.Nature, (IEnumerable
                                    <SelectListItem>)ViewData["ListNature"], new { @class = "selectize-control input-selectize multi", @required = "required", @id = "Nature" })
                                </div>
                            </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group row no-gutters">
                                    <label for="TacheTitre" class="col-sm-4 col-form-label"> Titre </label>
                                    <div class="col-sm-8">
                                        @Html.EditorFor(model => model.Titre, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.Titre, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>
                            <div class="col-md-3">
                                <div class="form-group row no-gutters">
                                    <label for="CodeClient" class="col-sm-4 col-form-label"> Client </label>
                                    <div class="col-sm-8">
                                        @Html.DropDownListFor(model => model.CodeClient, (IEnumerable
                                        <SelectListItem>)ViewData["ListClient"], "Sélectionner un client", new { @class = "selectize-control input-selectize multi", @id = "CodeClient", @onchange = "FixeClient()", @disabled = "disabled" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group row no-gutters">
                                    <label for="RaisonSociale" class="col-sm-5 col-form-label"> Raison Sociale </label>
                                    <div class="col-sm-7">
                                        @Html.EditorFor(model => model.RaisonSociale, new { htmlAttributes = new { @class = "form-control", @id = "RaisonSociale", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.RaisonSociale, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>


                            <div class="col-md-6">
                                <div class="form-group row no-gutters">
                                    <label for="Description" class="col-sm-4 col-form-label"> Description </label>
                                    <div class="col-sm-8">
                                        @Html.TextAreaFor(model => model.Description, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group row no-gutters">
                                    <label for="Observation" class="col-sm-4 col-form-label"> Observation </label>
                                    <div class="col-sm-8">
                                        @Html.TextAreaFor(model => model.Observation, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(model => model.Observation, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group row no-gutters">
                                    <label for="NomContact" class="col-sm-4 col-form-label"> Nom Contact </label>
                                    <div class="col-sm-8">
                                        @Html.DropDownListFor(model => model.NomContact, (IEnumerable
                                       <SelectListItem>)ViewData["ListeContactClient"], "Sélectionner un contact", new { @class = "selectize-control input-selectize multi", @disabled = "disabled" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group row no-gutters">
                                    <label for="MoyenCommunication" class="col-sm-6 col-form-label"> Moyen Communication </label>
                                    <div class="col-sm-6">
                                        @Html.DropDownListFor(model => model.CodeMoyenCommunication, (IEnumerable
                                       <SelectListItem>)ViewData["ListeMoyenCommunication"], "Sélectionner une moyen", new { @class = "selectize-control input-selectize multi", @disabled = "disabled" })
                                    </div>
                                </div>
                            </div>


                        </div>
                </div>
            </div>
        </div>


    }
</div>

<script>

function FixeClient() {
    var select=document.getElementById("CodeClient");
    document.getElementById("RaisonSociale").value = select.options[select.selectedIndex].text;
}
var now = new Date();
now.setMinutes(now.getMinutes() - now.getTimezoneOffset());
document.getElementById('DateReclamation').value = now.toISOString().slice(0,16);
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @*<script>
            $(document).ready(function () {

            $("#checksoft").click(function ()
            {

            var n = $(this).is(':checked');
            if ($(this).is(':checked')) {
            $("#check").value= true
            }
            else
            {
            $("#check").value= false
            }
            });
            });
        </script>*@

    <script>
        function Activer()
      {
         if ($("#checkbox").is(':checked')) {
         $('#DateReclamation').attr('readonly', false);
         $('#RaisonSociale').attr('readonly', false);
        $('#Titre').attr('readonly', false);
        $('#Observation').attr('readonly', false);
        $('#Duree').attr('readonly', false);
        $('#Enregistrer').show();
        }
      }
    </script>
}
