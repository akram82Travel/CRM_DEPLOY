@model CRMSTUBSOFT.Crm_PVReunion

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="content-wrapper">
    <div class="content-header">
        <div class="content-header-left col-md-12 col-12 mb-2 breadcrumb-new card">
            <div class="row no-gutters">
                <div class="col-md-3"><span style="padding-top: 9px; font-size: 16px; " class="content-header-title mb-0 d-inline-block">Créer un PV Réunion</span></div>
                <div class="col-md-4" style=" padding-top: 8px;">
                    <div class="row breadcrumbs-top d-inline-block">
                        <div class="breadcrumb-wrapper">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item">
                                    <a href="/">Tableau de Bord</a>
                                </li>
                                <li class="breadcrumb-item">
                                    <a href="/Crm_PVReunion">PV Réunion</a>
                                </li>
                                <li class="breadcrumb-item active">
                                    Création
                                </li>
                            </ol>
                        </div>
                    </div>
                </div>

            </div>


        </div>

    </div>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="row">
            <div class="col-lg-12 col-md-12">
                <div class="card">
                    <div class="card-header pb-0">
                        <h4 class="card-title">	&nbsp;	&nbsp;	&nbsp;	&nbsp;	&nbsp;</h4>
                        <div class="heading-elements">
                            <button type="submit" class="btn btn-success pull-right" style=" margin-top: -12px;"><i class="la la-save"></i> Enregistrer</button>
                        </div>
                        <hr />
                    </div>
                    <div class="card-body row pt-0">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.NumeroPVReunion, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.HiddenFor(model => model.DateReunion, new { htmlAttributes = new { @class = "form-control", @type = "Datetime-local" } })

                        <div class="col-md-4">
                            <label>Client</label>
                            <div class="form-group col-md-12">
                                @Html.DropDownListFor(model => model.CodeClient, (IEnumerable
                                <SelectListItem>)ViewData["ListClient"], "Sélectionner un client", new { @class = "selectize-control input-selectize multi", @id = "CodeClient", @onchange = "FixeClient()" })
                            </div>
                            <div class="form-group col-md-12">
                                <label>Projet</label>

                                @Html.EditorFor(model => model.Projet, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Projet, "", new { @class = "text-danger" })

                            </div>
                            <div class="form-group  col-md-12">
                                <label>Module</label>

                                @Html.EditorFor(model => model.Module, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Module, "", new { @class = "text-danger" })

                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group  col-md-12">
                                @Html.LabelFor(model => model.Objet, htmlAttributes: new { @class = "control-label" })

                                @Html.EditorFor(model => model.Objet, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Objet, "", new { @class = "text-danger" })

                            </div>
                            <div class="form-group col-md-12">
                                <label>Description</label>

                                @Html.TextAreaFor(model => model.DescriptionGeneral, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DescriptionGeneral, "", new { @class = "text-danger" })


                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group col-md-12">
                                <label> Date Prévus Réunion</label>

                                @Html.EditorFor(model => model.DatePrevusReunion, new { htmlAttributes = new { @class = "form-control", @type = "Datetime-local" } })
                                @Html.ValidationMessageFor(model => model.DatePrevusReunion, "", new { @class = "text-danger" })

                            </div>
                            <div class="form-group col-md-12">
                                <label>Durée Estimée</label>

                                @Html.EditorFor(model => model.Dure, new { htmlAttributes = new { @class = "form-control", @type = "time" } })
                                @Html.ValidationMessageFor(model => model.Dure, "", new { @class = "text-danger" })

                            </div>
                                <div class="col-md-12">
                                    <button id="btnAdd" type="button" onclick="AddTextBox()" class="btn btn-info">
                                        <i class="icon-plus"></i> Ajouter Personne
                                    </button>

                                    <br />
                                    <div id="TextBoxContainer" style=" border-left: 2px solid #ddd; padding-left: 25px;">
                                        <!--Textboxes will be added here -->
                                    </div>
                                    <br />
                                </div>
                        </div>

                        @Html.HiddenFor(model => model.Createur, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    </div>
                </div>
            </div>

                  
                   

                    }
                </div>
                <script type="text/javascript">
                    function GetDynamicTextBox(value) {
                        var div = $("<div />").attr("class", "row mb-1 mt-1");

                        var textBox = $("<input />").attr("type", "textbox").attr("name", "DynamicTextBox").attr("class", "form-control col-md-10");
                        textBox.val(value);
                        div.append(textBox);

                        var button = $("<button><i class=' la la-trash-o'></i></button>").attr("value", "Supprimer").attr("class", "btn btn-danger delete col-md-2");
                        button.attr("onclick", "RemoveTextBox(this)");
                        div.append(button);

                        return div;
                    }
                    function AddTextBox() {
                        var div = GetDynamicTextBox("");
                        $("#TextBoxContainer").append(div);
                    }

                    function RemoveTextBox(button) {
                        $(button).parent().remove();
                    }
                    var now = new Date();
                    now.setMinutes(now.getMinutes() - now.getTimezoneOffset());
                    document.getElementById('DateReunion').value = now.toISOString().slice(0, 16);

                    now.setMinutes(now.getMinutes() - now.getTimezoneOffset());
                    document.getElementById('DatePrevusReunion').value = now.toISOString().slice(0, 16);
                </script>
