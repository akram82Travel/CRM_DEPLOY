@model CRMSTUBSOFT.Crm_TacheReclamation


@{
    ViewBag.Title = "TacheParRapport";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="content-wrapper">
    <div class="content-header">
        <div class="content-header-left col-md-12 col-12 mb-2 breadcrumb-new card">
            <div class="row no-gutters">
                <div class="col-md-3"><span style="padding-top: 9px; font-size: 16px; " class="content-header-title mb-0 d-inline-block">Rapport Par Tache/Rapport</span></div>
                <div class="col-md-4" style=" padding-top: 8px;">
                    <div class="row breadcrumbs-top d-inline-block">
                        <div class="breadcrumb-wrapper">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item">
                                    <a href="/">Tableau de Bord</a>
                                </li>
                                <li class="breadcrumb-item active">
                                    Impression Rapport/Tache
                                </li>
                            </ol>
                        </div>
                    </div>
                </div>

            </div>


        </div>

    </div>


    <form action="@Url.Action("ImpressionTacheParRapport")" method="post" target="_blank">
        <input type="hidden" name="Format" id="Format" value="PDF" />

        @Html.AntiForgeryToken()
        <nav class="header-navbar navbar-expand-sm navbar navbar-with-menu navbar-light navbar-shadow bg-white bg-lighten-5 border-amber border-lighten-4">
            <div class="input-group col-xl-4 col-lg-6 col-md-12" style="margin-left:10%;">
                <label class="mb-1 text-bold-700">DU</label>&nbsp; &nbsp;&nbsp;&nbsp;
                <input type="date" class="form-control border-success" id="DateDebut" name="DateDebut" value="@ViewData["DateDebut"]" />
            </div>
            <div class="input-group col-xl-4 col-lg-6 col-md-12">
                <label class="mb-1 text-bold-700">AU</label>&nbsp; &nbsp;&nbsp;&nbsp;
                <input type="date" class="form-control border-success" id="DateFin" name="DateFin" value="@ViewData["DateFin"]" />
            </div>
            @*<div class="col-xl-4 col-lg-6 col-md-12">
                    <button type="submit" class="btn btn-success">Chercher</button>
                </div>*@
        </nav>
        <br />

        <div class="card">
            <div class="card-content">
                <div class="card-body">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                        <div class="form-group">
                            <div class="btn-group float-md-right">
                                <button type="submit" class="btn btn-dark"><i class="la la-print"></i> Imprimer</button>
                            </div>
                        </div>
                        <div class="form-horizontal">
                            Information Genérale
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="row">
                                @*<div class="form-group col-xl-6 col-lg-6 col-md-12">
                                    <label> Client </label>
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.CodeClient, (IEnumerable
                                        <SelectListItem>)ViewData["ListClient"], "Sélectionner un client", new { @class = "selectize-control input-selectize multi", @id = "CodeClient", @onchange = "FixeClient()" })
                                    </div>*@
                                <div class="form-group col-xl-6 col-lg-6 col-md-12">
                                    <label for="CodeClient" class="col-sm-3 col-form-label"> Client </label>
                                    <div class="col-sm-9">
                                        @Html.DropDownListFor(model => model.CodeClient, (IEnumerable
                                            <SelectListItem>)ViewData["ListClient"], "Sélectionner un client", new { @class = "select2 form-control", @id = "CodeClient", @onchange = "FixeClient()" })
                                    </div>
                                </div>



                                @*<div class="form-group col-xl-6 col-lg-6 col-md-12">
                                        <label> Rapport </label>
                                        <div class="col-md-10">

                                            @Html.DropDownListFor(model => model.NumDossier, (IEnumerable
                                            <SelectListItem>)ViewData["ListRapport"], "Sélectionner un rapport", new { @class = "selectize-control input-selectize multi" })
                                        </div>

                                    </div>*@

                                <div class="form-group col-xl-6 col-lg-6 col-md-12">
                                    <label class="col-md-10"> Rapport </label>
                                    <div class="col-sm-10">
                                        <select name="@Html.NameFor(model => model.NumDossier)" id="@Html.IdFor(model => model.NumDossier)" class="selectpicker form-control" data-live-search="true">
                                            <option value="">Sélectionner un Rapport</option>

                                            @foreach (var item in Model.ListeRapport)
                                            {
                                        <option value="@item.NumeroRapport">N°: @item.NumeroRapport: @Html.Raw(@item.DescriptionRapport) (@item.CodeClient)</option>
                                            }

                                        </select>
                                    </div>
                                </div>

                                <div class="col-md-3 hidden">
                                    <div class="form-group row no-gutters">
                                        <label for="RaisonSociale" class="col-sm-5 col-form-label"> Raison Sociale </label>
                                        <div class="col-sm-7">
                                            @Html.EditorFor(model => model.RaisonSociale, new { htmlAttributes = new { @class = "form-control", @id = "RaisonSociale" } })
                                            @Html.ValidationMessageFor(model => model.RaisonSociale, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                @*<div class="form-group col-xl-6 col-lg-6 col-md-12">
                                        <label> Réalisé par </label>
                                        <div class="col-md-10">
                                            @Html.DropDownListFor(model => model.CodeRespensable, (IEnumerable
                                            <SelectListItem>)ViewData["ListResponsable"], "Sélectionner réalisateur", new { @class = "selectize-control input-selectize multi", @id = "UtilisateurCreateur", @onchange = "FixeClient()" })
                                        </div>
                                    </div>*@
                                <div class="form-group col-xl-6 col-lg-6 col-md-12">
                                    <label for="NomTesteur" class="col-sm-4 col-form-label">Réalisé par </label>
                                    <div class="col-sm-8">
                                        @Html.ListBoxFor(model => model.SelectedresponsableId, new MultiSelectList(Model.ListeRespensables, "CodeRespensable", "Nom"), new { @multiple = "multiple", @placeholder = "Sélectionner des respensables", @class = "selectize-multiple" })
                                    </div>
                                </div>

                                <div class="form-group col-xl-6 col-lg-6 col-md-12">
                                    <label class="col-md-10"> Validé Par</label>
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.NomValidateur, (IEnumerable
                                        <SelectListItem>)ViewData["ListResponsable"], "Sélectionner validateur", new { @class = "selectize-control input-selectize multi", @id = "NomValidateur", @onchange = "FixeClient()" })
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="form-group col-xl-6 col-lg-6 col-md-12">
                                    <label class="col-md-10"> Testée par </label>
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.NomTesteur, (IEnumerable
                                        <SelectListItem>)ViewData["ListResponsable"], "Sélectionner testeur", new { @class = "selectize-control input-selectize multi", @id = "NomTesteur", @onchange = "FixeClient()" })
                                    </div>
                                </div>
                                <div class="form-group col-xl-6 col-lg-6 col-md-12">
                                    <label class="col-md-10"> Planifiée Par</label>
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.NomPlanificateur, (IEnumerable
                                        <SelectListItem>)ViewData["ListResponsable"], "Sélectionner plannificateur", new { @class = "selectize-control input-selectize multi", @id = "NomPlanificateur", @onchange = "FixeClient()" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-xl-6 col-lg-6 col-md-12">
                                    <label class="col-md-10"> Etat </label>
                                    <div class="col-md-10">
                                        @Html.ListBoxFor(model => model.NumeroEtat, (IEnumerable
                                    <SelectListItem>)ViewData["ListEtat"], new { @multiple = "multiple", @placeholder = "Sélectionner des respensables", @class = "selectize-multiple" })
                                    </div>

                                </div>
                                <div class="form-group col-xl-6 col-lg-6 col-md-12">
                                    <label class="col-md-10"> Nature </label>
                                    <div class="col-md-10">
                                        @Html.ListBoxFor(model => model.Nature, (IEnumerable
                                     <SelectListItem>)ViewData["ListNature"], new { @multiple = "multiple", @placeholder = "Sélectionner des respensables", @class = "selectize-multiple" })
                                    </div>
                                </div>
                                <div class="form-group col-xl-4 col-lg-4 col-md-12 no-gutters">
                                    <label class="col-md-10"> Avec Durée Réelle</label>

                                    <div class="checkbox">
                                        <input name="DureeReel" id="DureeReel" type="checkbox" />
                                    </div>

                                </div>
                                <div class="form-group col-xl-4 col-lg-4 col-md-12">
                                    <label class="col-md-10"> Avec Durée Estimée</label>

                                    <div class="checkbox">
                                        <input name="Duree" id="Duree" type="checkbox" onclick="Load('avec')" />
                                    </div>

                                </div>
                                <div class="form-group col-xl-4 col-lg-4 col-md-12 no-gutters" id="avec" style="display: none">
                                    <label class="col-md-10"> Avec Signature Client</label>

                                    <div class="checkbox">
                                        <input name="signature" id="signature" type="checkbox" />
                                    </div>

                                </div>

                            </div>


                        </div>
                    }
                </div>
            </div>


        </div>
    </form>

</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(function () {
        $('#NumDossier').selectpicker({
    dropdownAutoWidth : false,

});
        $('#CodeClient').change(function() {
                                var code_client = $(this).val();
                                if (code_client != "Sélectionner un client") {
                                    $('#NumDossier').find('option:contains("")').show();
                                    $('#NumDossier').find('option:not(:contains("' + code_client + '"))').hide();
                                    $('#NumDossier').selectpicker('refresh');

                                } else {
                                    $('#NumDossier').find('option').show();
                                    $('#NumDossier').selectpicker('refresh');

                                }
                            });

        });
    </script>
}
<script>

    function FixeClient(codeClient) {
        var select=document.getElementById("CodeClient");
        var selectR=document.getElementById("NumDossier");
        document.getElementById("RaisonSociale").value = select.options[select.selectedIndex].text;
        $("#CodeClient").change(function(){
        //console.log($('#Rapport .option:contains(""+codeClient+"")').html());


        //$("#Rapport .selectize-dropdown-content div:contains("41110039")).html().hide();
        //$("#Rapport .selectize-dropdown-content").css("visibility", "hidden");
        });


        //alert(selectR.options[selectR.selectedIndex].getAttribute('data-CodeClient'));
        //selectR.options[selectR.selectedIndex].getAttribute('data-CodeClient')=select.options[select.selectedIndex].text;
    }


function Load(z) {
  var x = document.getElementById(z);
  if (x.style.display === "none") {
    x.style.display = "block";
  } else {
    x.style.display = "none";
  }
}
    </script>
