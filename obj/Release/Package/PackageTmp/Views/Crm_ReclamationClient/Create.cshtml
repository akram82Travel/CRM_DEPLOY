@model CRMSTUBSOFT.Crm_ReclamationClient

@{
    ViewBag.Title = "Création Réclamation";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="content-wrapper">
    <div class="content-header">
        <div class="content-header-left col-md-12 col-12 mb-2 breadcrumb-new card">
            <div class="row no-gutters">
                <div class="col-md-3"><span style="padding-top: 9px; font-size: 16px; " class="content-header-title mb-0 d-inline-block">Créer Réclamation</span></div>
                <div class="col-md-4" style=" padding-top: 8px;">
                    <div class="row breadcrumbs-top d-inline-block">
                        <div class="breadcrumb-wrapper">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item">
                                    <a href="/">Tableau de Bord</a>
                                </li>
                                <li class="breadcrumb-item">
                                    <a href="/Crm_ReclamationClient">Réclamation</a>
                                </li>
                                <li class="breadcrumb-item active">
                                    Création
                                </li>
                            </ol>
                        </div>
                    </div>
                </div>

            </div>


        </div>

    </div>

    @using (Html.BeginForm("Create", "Crm_ReclamationClient", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="col-lg-12 col-md-12">
                <div class="card">
                    <div class="card-header pb-0">
                        <h4 class="card-title">	&nbsp;	&nbsp;	&nbsp;	&nbsp;	&nbsp;<br /></h4>
                        <div class="heading-elements">
                            <button type="submit" class="btn btn-success pull-right" style=" margin-top: -12px;"><i class="la la-save"></i> Enregistrer</button>
                        </div>

                        <hr />
                    </div>
                    <div class="card-body row pt-0">
                        @Html.HiddenFor(model => model.Id_Reclamation, new { htmlAttributes = new { @class = "form-control", @value = @ViewData["Compteur"], @readonly = "readonly" } })
                        @Html.HiddenFor(model => model.DateReclamation, new { htmlAttributes = new { @class = "form-control", @type = "datetime-local" } })
                        @Html.HiddenFor(model => model.OutilCommunication, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.HiddenFor(model => model.UtilisateurContact, new { htmlAttributes = new { @class = "form-control" } })

                        <div class="col-md-4">
                            <div class="form-group row no-gutters">
                                <label for="CodeClient" class="col-sm-12 col-form-label pt-0"> Client </label>
                                <div class="col-sm-12">
                                    @Html.DropDownListFor(model => model.CodeClient, (IEnumerable
                                    <SelectListItem>)ViewData["ListClient"], "Sélectionner un client", new { @class = "selectize-control input-selectize multi", @id = "CodeClient", @onchange = "FixeClient()" })
                                    @Html.ValidationMessageFor(model => model.CodeClient, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            @Html.HiddenFor(model => model.RaisonSociale, new { htmlAttributes = new { @class = "form-control", @id = "RaisonSociale" } })
                            <div class="form-group row no-gutters">
                                <label for="NomContact" class="col-sm-12 col-form-label pt-0"> Nom Contact </label>
                                <div class="col-sm-12">
                                   @Html.DropDownListFor(model => model.NomContact, (IEnumerable
                                   <SelectListItem>)ViewData["ListeContactClient"], new { @class = "selectize-control input-selectize multi" })

                                </div>
                            </div>
                            <div class="form-group row no-gutters">
                                <label for="MoyenCommunication" class="col-sm-12 col-form-label pt-0"> Moyen Communication </label>
                                <div class="col-sm-12">
                                    @Html.DropDownListFor(model => model.CodeMoyenCommunication, (IEnumerable
                                   <SelectListItem>)ViewData["ListeMoyenCommunication"], "Sélectionner une moyen", new { @class = "selectize-control input-selectize multi" })

                                    @Html.ValidationMessageFor(model => model.CodeMoyenCommunication, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group row no-gutters">
                                <label for="TacheTitre" class="col-sm-12 col-form-label pt-0"> Titre </label>
                                <div class="col-sm-12">
                                    @Html.EditorFor(model => model.Titre, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Titre, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row no-gutters">
                                <label for="Description" class="col-sm-12 col-form-label pt-0"> Description </label>
                                <div class="col-sm-12">
                                    @Html.TextAreaFor(model => model.Description, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                        <div class="col-md-4 ">
                            @*<div class="form-group row no-gutters">
                                                        <label for="Description" class="col-sm-12 col-form-label pt-0"> Type </label>
                                                        <div class="col-sm-12">
                                                            @Html.DropDownList("Soft", (IEnumerable
                                <SelectListItem>)ViewData["ListNature"], "Sélectionner un Type", new { @class = "selectize-control input-selectize multi" })

                                                        </div>
                                                    </div>*@
                            <div class="form-group row no-gutters">

                                <label for="Nature" class="col-sm-12  pt-0 col-form-label">Nature </label>@Model.Nature
                            <div class="col-sm-12">
                               @Html.DropDownListFor(model => model.Nature, (IEnumerable<SelectListItem>)ViewData["ListNature"], Model.Nature, new { @class = "selectize-control input-selectize multi", @required = "required", @id = "Nature" })

                            </div>


                                <div class="form-group row no-gutters">

                                    <label for="Observation" class="col-sm-12 col-form-label pt-0"> Observation </label>
                                    <div class="col-sm-12">
                                        @Html.TextAreaFor(model => model.Observation, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Observation, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div style="width: 110px; margin-top: 3px; ">
                                    <img id="blah" src="~/Content/img/empty_picture.png" alt="picture aliment" style="width: 100%" class="img-thumbnail" />


                                </div>
                                <br />
                                <input type="file" name="Image" id="Image" onchange="document.getElementById('blah').src = window.URL.createObjectURL(this.files[0])" />

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


    }


</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @*<script>
        $(document).ready(function () {

            $("#checksoft").click(function ()
            {

                var n = $(this).is(':checked');
                if ($(this).is(':checked')) {
                  $("#check").value= true
                }
                else
              {
                  $("#check").value= false
              }
            });
        });
        </script>*@
}
<script>

function FixeClient()
{
    var select=document.getElementById("CodeClient");
    document.getElementById("RaisonSociale").value = select.options[select.selectedIndex].text;
}

var now = new Date();
now.setMinutes(now.getMinutes() - now.getTimezoneOffset());
document.getElementById('DateReclamation').value = now.toISOString().slice(0,16);

</script>
