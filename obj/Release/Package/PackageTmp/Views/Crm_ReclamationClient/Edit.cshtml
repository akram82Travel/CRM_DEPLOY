@model CRMSTUBSOFT.Crm_ReclamationClient

@{
    ViewBag.Title = "Editer Reclamation";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>

    /* Styles for the modal */
    .modal {
        display: none;
        position: fixed;
        z-index: 9999;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.8);
    }

    .modal-content {
        margin: auto;
        display: block;
        width: 80%;
        max-width: 800px;
    }

    .close {
        color: #fff;
        font-size: 30px;
        font-weight: bold;
        position: absolute;
        top: 10px;
        right: 20px;
        cursor: pointer;
    }
</style>
<div class="content-wrapper">
    <div class="content-header row">
        <div class="content-header-left col-md-6 col-12 mb-2 breadcrumb-new">
            <h3 class="content-header-title mb-0 d-inline-block">Editer une Réclamation</h3>
            <div class="row breadcrumbs-top d-inline-block">
                <div class="breadcrumb-wrapper col-12">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item">
                            <a href="/">Table de board</a>
                        </li>
                        <li class="breadcrumb-item">
                            <a href="/Crm_ReclamationClient">Réclamations</a>
                        </li>
                        <li class="breadcrumb-item active">
                            Editer
                        </li>
                    </ol>
                </div>
            </div>
        </div>

    </div>
    @using (Html.BeginForm("Edit", "Crm_ReclamationClient", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="col-lg-12 col-md-12">
                <div class="card">
                    <div class="card-header">
                        <h4 class="card-title">	&nbsp;	&nbsp;	&nbsp;	&nbsp;	&nbsp;<br /></h4>
                        <div class="heading-elements">
                            <button type="submit" class="btn btn-success pull-right" style=" margin-top: -12px;"><i class="la la-save"></i> Enregistrer</button>
                        </div>

                        <hr />
                    </div>
                    <div class="card-body row pt-0">
                        @Html.HiddenFor(model => model.Id_Reclamation, new { htmlAttributes = new { @class = "form-control", @value = @ViewData["Compteur"], @readonly = "readonly" } })
                        @Html.HiddenFor(model => model.DateReclamation, new { htmlAttributes = new { @class = "form-control", @type = "datetime-local" } })
                        <div class="col-md-4">
                            <div class="form-group row no-gutters">
                                <label for="CodeClient" class="col-sm-4 col-form-label"> Client </label>
                                <div class="col-sm-8">
                                    @Html.DropDownListFor(model => model.CodeClient, (IEnumerable
                                    <SelectListItem>)ViewData["ListClient"], new { @class = "selectize-control input-selectize multi", @id = "CodeClient", @onchange = "FixeClient()" })

                                </div>
                            </div>
                            @Html.HiddenFor(model => model.RaisonSociale, new { htmlAttributes = new { @class = "form-control", @id = "RaisonSociale" } })
                            <div class="form-group row no-gutters">
                                <label for="NomContact" class="col-sm-4 col-form-label"> Nom Contact </label>
                                <div class="col-sm-8">
                                    @Html.DropDownListFor(model => model.NomContact, (IEnumerable
                                   <SelectListItem>)ViewData["ListeContactClient"], new { @class = "selectize-control input-selectize multi" })
                                </div>
                            </div>
                            <div class="form-group row no-gutters">
                                <label for="MoyenCommunication" class="col-sm-6 col-form-label"> Moyen Communication </label>
                                <div class="col-sm-6">
                                    @Html.DropDownListFor(model => model.CodeMoyenCommunication, (IEnumerable
                                   <SelectListItem>)ViewData["ListeMoyenCommunication"], new { @class = "selectize-control input-selectize multi" })
                                </div>
                            </div>

                        </div>
                        <div class="col-md-4">
                            <div class="form-group row no-gutters">
                                <label for="TacheTitre" class="col-sm-4 col-form-label"> Titre </label>
                                <div class="col-sm-8">
                                    @Html.EditorFor(model => model.Titre, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Titre, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group row no-gutters">
                                <label for="Description" class="col-sm-4 col-form-label"> Description </label>
                                <div class="col-sm-8">
                                    @Html.TextAreaFor(model => model.Description, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                        <div class="col-md-4">
                            <div class="form-group row no-gutters">
                                <label for="Nature" class="col-sm-12  pt-0 col-form-label">Nature </label>
                                <div class="col-sm-10">
                                    @Html.DropDownListFor(model => model.Nature, (IEnumerable
                                      <SelectListItem>)ViewData["ListNature"], new { @class = "selectize-control input-selectize multi", @required = "required", @id = "Nature" })
                                </div>

                            </div>

                            <div class="form-group row no-gutters">
                                <label for="Observation" class="col-sm-4 col-form-label"> Observation </label>
                                <div class="col-sm-8">
                                    @Html.TextAreaFor(model => model.Observation, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Observation, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <label>Pièce jointe</label>
                            <input type="file" name="EditimageElement" id="EditimageElement" onchange="fileCheck(this);" />
                            <hr />
                            <!-- Button to open the modal -->
                            <button onclick="openModal()" type="button">
                                Zoom +
                            </button>

                            <!-- The modal -->
                            <div id="myModal" class="modal">
                                <!-- Modal content -->
                                <div class="modal-content">
                                    <span class="close" onclick="closeModal()">&times;</span>
                                    <img src="~/ReclamationJoint/@Model.logo" id="modalImage" style="width: 100%" />
                                </div>
                            </div>
                            <img src="~/ReclamationJoint/@Model.logo" alt="" height=200 width=200 />
                        </div>

                    </div>
                </div>
            </div>
        </div>


    }
</div>

<script>

    function FixeClient() {
        var select = document.getElementById("CodeClient");
        document.getElementById("RaisonSociale").value = select.options[select.selectedIndex].text;
    }
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @*<script>
            $(document).ready(function () {

            $("#checksoft").click(function ()
            {

            var n = $(this).is(':checked');
            if ($(this).is(':checked')) {
            $("#check").value= true
            }
            else
            {
            $("#check").value= false
            }
            });
            });
        </script>*@

    <script>
        function Activer() {
            if ($("#checkbox").is(':checked')) {
                $('#DateReclamation').attr('readonly', false);
                $('#RaisonSociale').attr('readonly', false);
                $('#Titre').attr('readonly', false);
                $('#Observation').attr('readonly', false);
                $('#Duree').attr('readonly', false);
                $('#Enregistrer').show();
            }
        }
    </script>
    <script type="text/javascript">
        function fileCheck(obj) {
            var fileExtension = ['jpeg', 'jpg', 'png', 'gif', 'bmp'];
            if ($.inArray($(obj).val().split('.').pop().toLowerCase(), fileExtension) == -1) {
                alert("Only '.jpeg','.jpg', '.png', '.gif', '.bmp' formats are allowed.");
            }
        }
    </script>
    <script>
        // Open the modal
        function openModal() {
            document.getElementById("myModal").style.display = "block";
        }

        // Close the modal
        function closeModal() {
            document.getElementById("myModal").style.display = "none";
        }

        // Handle image click event to show in modal
        var image = document.getElementById("modalImage");
        image.addEventListener("click", function () {
            openModal();
        });

    </script>
}
